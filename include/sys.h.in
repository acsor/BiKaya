#ifndef BKA_SYS_H
#define BKA_SYS_H


#cmakedefine BKA_ARCH_UMPS
#cmakedefine BKA_ARCH_UARM


/* ERROR CONSTANTS. */
/**
 * No error occurred.
 */
#define BKA_E_OK		0
/**
 * A "generic" kind of error, for primitives that do not want to further
 * specify the kind of error occurred.
 */
#define BKA_E_GEN		-1
/**
 * A null-pointer error, relating for example to function arguments.
 */
#define BKA_E_NULLPTR	-2
/**
 * An invalid argument error.
 */
#define BKA_E_INVARG	-3


/* OTHER CONSTANTS. */
#ifndef NULL
#define NULL	((void*)0)
#endif


/* CODE INHERITED FROM CONST.H, PROVIDED BY UNIVERSITY TUTOR AND PROFESSOR. */

/* Maximum number of processes concurrently active in the system. */
#define BKA_MAX_PROC 20
#define MAXPROC BKA_MAX_PROC

/* Num. of usermode processes (not including master proc) and system daemons */
#define UPROCMAX 3

#define	HIDDEN  static
#define	TRUE 	1
#define	FALSE	0
#define ON 	    1
#define OFF 	0
#define EOS     '\0'

/* Maximum number of devices per interrupt line */
#define BKA_DEV_PER_INT 8
#define DEV_PER_INT BKA_DEV_PER_INT

#define BKA_CR 0x0a   /* carriage return as returned by the terminal */
#define CR BKA_CR   /* carriage return as returned by the terminal */


#ifdef BKA_ARCH_UMPS
#include "umps/libumps.h"
#include "umps/arch.h"
#include "umps/types.h"
#elif defined(BKA_ARCH_UARM)
#include "uarm/libuarm.h"
#include "uarm/arch.h"
#include "uarm/uARMtypes.h"
#endif


#endif
